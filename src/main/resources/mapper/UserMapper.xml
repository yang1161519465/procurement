<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xgkx.procurement.mapper.UserMapper">
  <resultMap id="BaseResultMap" type="com.xgkx.procurement.entity.User">
    <id column="user_id" jdbcType="VARCHAR" property="userId" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="login_name" jdbcType="VARCHAR" property="loginName" />
    <result column="password_md5" jdbcType="VARCHAR" property="passwordMd5" />
    <result column="phone_num" jdbcType="VARCHAR" property="phoneNum" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="org_id" jdbcType="INTEGER" property="orgId" />
    <result column="create_by" jdbcType="VARCHAR" property="createBy" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_by" jdbcType="VARCHAR" property="updateBy" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Base_Column_List">
    user_id, user_name, login_name, password_md5, phone_num, email, create_by, create_time,
    update_by, update_time
  </sql>

  <select id="info" resultMap="BaseResultMap">
    select su.user_id, su.user_name, su.login_name, su.org_id, su.email, su.phone_num, so.org_name
    from s_user su
    left join s_org so on su.org_id = so.org_id
    where su.user_id = #{currentUserId}
  </select>

  <select id="getUserList" resultMap="BaseResultMap">
    select
        su.user_id,
        su.user_name,
        su.login_name,
        su.org_id,
        su.phone_num,
        su.email,
        so.org_name
    from s_user su
    left join s_org so on su.org_id = so.org_id
    <where>
      <if test="userName != null and userName != ''">
        and su.user_name like concat('%', #{userName}, '%')
      </if>
      <if test="loginName != null and loginName != ''">
        and su.login_name like concat('%', #{loginName}, '%')
      </if>
      <if test="orgId != null">
        and su.org_id = #{orgId}
      </if>
      <if test="phoneNum != null and phoneNum != ''">
        and su.phone_num like cancat('%', #{phoneNum}, '%')
      </if>
      <if test="email != null and email != ''">
        and su.email like cancat('%', #{email}, '%')
      </if>
    </where>
  </select>

</mapper>
